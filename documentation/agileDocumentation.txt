s\Application\Collections\PostCollection
 [x] Collection can only store posts
 [x] Collection stores one post
 [x] Collection stores n posts 
 [x] Collection can return its first element
 [x] Collection returns specified post
 [x] Collection throws exception if post does not exists
 [x] Shift with one element leaves collection empty
 [x] Pop with one element leaves collection empty
 [x] Shift removes first element
 [x] Pop removes las element
 [x] Collection returns all posts
 [x] Collection returns next element
 [x] Collection next element does not exist
 [x] Collection returns prev element
 [x] Collection prev element does not exist

s\Application\Command\Post\Create
 [x] Post was created

s\Application\Handler\Post\CreatePostHandler
 [x] Create post was handled
 [x] Invalid data throws validation exception

Application\Queries\Post\PostQueries
 [x] Query returns post by id
 [x] Query found nothing by title
 [x] Query returns empty collection when we have no posts
 [x] Query returns newest post

s\Application\Validators\Collection\CollectionCreationValidator
 [x] Collection creationt validates input
 [x] Collection throws exception if invalid elements in input

s\Domain\DataObject\Email\Email
 [x] Invalid data throws exception 
 [x] Email is created with user name and host
 [x] Email data object can be printed

s\Domain\DataObject\Name\PersonName
 [x] Person can have only first name
 [x] Person has last name
 [x] Person has full name
 [x] Person name data object can be printed

s\Domain\DataObject\Name\UserName
 [x] User has name
 [x] Person name data object can be printed

s\Domain\Entity\Post
 [x] Post cannot be empty 
 [x] Post attributes are set
 [x] Post is not published

s\Domain\Entity\User
 [x] Post cannot be empty
 [x] User has all fields filled

